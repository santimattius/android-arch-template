def Group(Closure closure) {
    closure.delegate = dependencies
    return closure
}

project.ext {

    kotlinCore = Group {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    }

    androidCore = Group {
        implementation "androidx.core:core-ktx:$core_version"
        implementation "androidx.appcompat:appcompat:$appcompat_version"
        implementation "androidx.fragment:fragment-ktx:$fragment_version"
        implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
        implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
        implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
        debugImplementation("androidx.fragment:fragment-testing:$fragment_version") {
            exclude group: "androidx.test", module: "core"
        }
    }

    material = Group {
        implementation "com.google.android.material:material:$material_version"
    }

    coroutine = Group {
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_testing_version"
        androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_testing_version") {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
        }
    }

    networking = Group {
        implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
        implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"
        implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_interceptor_version"
        // Gson for parsing the JSON format
        implementation "com.google.code.gson:gson:$gson_version"
        // Joda time library for dealing with time
        implementation "joda-time:joda-time:$joda_version"
        // Logging
        implementation "com.jakewharton.timber:timber:$timber_version"
    }

    archComponent = Group {
        implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_ktx_version"
    }

    glide = Group {
        implementation "com.github.bumptech.glide:glide:$glide_version"
    }

    room = Group {
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_ktx"
        kapt "androidx.room:room-compiler:$room_version"
    }

    koin = Group {
        implementation "io.insert-koin:koin-core:$koin_version"
        implementation "io.insert-koin:koin-android:$koin_version"
        testImplementation "io.insert-koin:koin-test:$koin_version"
        androidTestImplementation "io.insert-koin:koin-test:$koin_version"
    }

    espresso = Group {
        implementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"
        androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
        androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
        androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
        androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"
        androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    }

    testing = Group {
        testImplementation "junit:junit:$junit_version"
        testImplementation "io.mockk:mockk:$mockk_version"
        testImplementation "androidx.arch.core:core-testing:$core_testing_version"
        androidTestImplementation("androidx.test:core:$test_core_version") {
            force true
        }
        androidTestImplementation "io.mockk:mockk-android:$mockk_version"
        androidTestImplementation "androidx.test:runner:$runner_version"
        androidTestImplementation "androidx.test:rules:$rule_version"
        androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    }

    uiAutomator = Group {
        androidTestImplementation "androidx.test.uiautomator:uiautomator:$ui_automator"
    }
}